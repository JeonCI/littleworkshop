<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">

<sql id="status">
	<choose>
		<when test="pager.status == 0">
			WHERE ORDER_LIST.ORDER_STATUS= 0
		</when>
		<when test="pager.status == 1">
			WHERE ORDER_LIST.ORDER_STATUS= 1
		</when>
		<when test="pager.status == 2">
			WHERE ORDER_LIST.ORDER_STATUS= 2
		</when>
		<when test="pager.status == 3">
			WHERE ORDER_LIST.ORDER_STATUS= 3
		</when>
		<when test="pager.status == 4">
			WHERE ORDER_LIST.ORDER_STATUS= 4
		</when>
		<when test="pager.status == 5">
			WHERE ORDER_LIST.ORDER_STATUS= 5
		</when>
		<when test="pager.status == 6">
			WHERE ORDER_LIST.ORDER_STATUS= 6
		</when>
	</choose>
</sql>


	
	<resultMap type="Product" id="PaymentMap">
		<id column="product_code" property="productCode"/>
		<result column="seller_id" property="sellerId"/>
		<result column="product_name" property="productName"/>
		<result column="product_price" property="productPrice"/>

		<collection property="basketList" column="BASKET_CODE" ofType="Basket" javaType="ArrayList">
			<id column="BASKET_CODE" property="basketCode" />
			<result column="ID" property="id" />
			<result column="PRODUCT_AMOUNT" property="productAmount" />
			<result column="BASKET_REG_DATE" property="basketRegDate" />
			<result column="ORDER_INFO" property="orderInfo" />
		</collection>

		<collection property="productImageList" column="pi_product_code" ofType="ProductImages" javaType="ArrayList">
			<id column="product_image_code" property="productImageCode"/>
			<result column="pi_product_code" property="productCode"/>
			<result column="product_image_uuid" property="productImageUuid"/>
			<result column="product_image_name" property="productImageName"/>
		</collection>
	</resultMap>
	
	
	<resultMap type="Order" id="OrderMap">
			<id column="ORDER_LIST_CODE" property="orderListCode" />
			<result column="ID" property="id" />
			<result column="ADDRESS_CODE" property="addressCode" />
			<result column="ORDER_STATUS" property="orderStatus" />
			<result column="ORDER_DATE" property="orderDate" />
			<result column="ORDER_PAYMENT" property="orderPayment" />
			<result column="PAYMENT_PRICE" property="paymentPrice" />
			<result column="ORDER_STATUS_NAME" property="orderStatusName" />

		<collection property="orderDetailList" column="ORDER_CODE" ofType="ProductOrderDetail" javaType="ArrayList">
			<id column="ORDER_CODE" property="orderCode" />
			<result column="ORDER_LIST_CODE" property="orderListCode" />
			<result column="PRODUCT_CODE" property="productCode" />
			<result column="ORDER_PRICE" property="orderPrice" />
			<result column="ORDER_INFO" property="orderInfo" />
			<result column="ORDER_AMOUNT" property="orderAmount" />
		</collection>
		
		<collection property="productList" column="product_code" ofType="Product" javaType="ArrayList">
			<id column="product_code" property="productCode"/>
			<result column="seller_id" property="sellerId"/>
			<result column="product_name" property="productName"/>
			<result column="product_price" property="productPrice"/>
			
			<collection property="productImageList" column="pi_product_code" ofType="ProductImages" javaType="ArrayList">
			<id column="product_image_code" property="productImageCode"/>
			<result column="pi_product_code" property="productCode"/>
			<result column="product_image_uuid" property="productImageUuid"/>
			<result column="product_image_name" property="productImageName"/>
			</collection>
		</collection>
		

		

	</resultMap>

	<select id="basketPaymentList" resultMap="PaymentMap">
		SELECT  b.*, p.product_name,p.product_price, p.seller_id, pi.product_image_uuid FROM
		(SELECT ROWNUM AS RNUM, sub.* from (SELECT * FROM BASKET WHERE id = #{id}
		<foreach collection="productCode" item="list" open="and product_code in(" separator="," close=")">
			#{list}
		</foreach>) sub) b
	    LEFT JOIN PRODUCT p ON p.product_code = B.product_code
		LEFT JOIN PRODUCT_IMAGES pi ON pi.product_code = p.product_code 
	</select>
	
	<select id="productPaymentList" resultMap="PaymentMap">
		SELECT p.*, pi.product_image_uuid FROM
		(SELECT ROWNUM AS RNUM, sub.* from (SELECT * FROM PRODUCT WHERE product_code = #{code}) sub) p
		LEFT JOIN PRODUCT_IMAGES pi ON pi.product_code = p.product_code 
	</select>
	
	<select id="orderHistory" resultMap="OrderMap">
         SELECT
         o.rnum, o.order_list_code, o.order_status, o.order_date, o.payment_price,
         d.order_code, d.order_price,d.order_info, d.order_amount,
         p.PRODUCT_CODE product_code,
		 p.SELLER_ID SELLER_ID,
		 p.PRODUCT_NAME PRODUCT_NAME,
         pi.product_image_uuid,
         s.order_status_name
         FROM
		(SELECT ROWNUM AS RNUM, sub.* from (SELECT * FROM order_list where id = #{id}) sub) o
        LEFT JOIN product_order_detail d ON d.order_list_code = o.order_list_code
        LEFT JOIN product p ON p.product_code = d.product_code
        LEFT JOIN order_status s ON s.order_status_code = o.order_status
        LEFT JOIN PRODUCT_IMAGES pi ON pi.product_code = p.product_code
        ORDER BY ORDER_DATE DESC
	</select>
	
	<select id="orderRequest" resultMap="OrderMap">
        SELECT
         o.rnum, o.order_list_code, o.order_status, o.order_date, o.payment_price,
         d.order_code, d.order_price,d.order_info, d.order_amount,
         p.PRODUCT_CODE product_code,
		 p.SELLER_ID SELLER_ID,
		 p.PRODUCT_NAME PRODUCT_NAME,
         pi.product_image_uuid,
         s.order_status_name
         FROM
		(SELECT ROWNUM AS RNUM, sub.* from (SELECT * FROM order_list <include refid="status"></include> order by order_date) sub) o
        LEFT JOIN product_order_detail d ON d.order_list_code = o.order_list_code
        LEFT JOIN product p ON p.product_code = d.product_code
        LEFT JOIN order_status s ON s.order_status_code = o.order_status 
        LEFT JOIN PRODUCT_IMAGES pi ON pi.product_code = p.product_code where p.seller_id = #{id}
	</select>
	
	<insert id="addOrder">
		INSERT INTO ORDER_LIST(ORDER_LIST_CODE, ID, ADDRESS_CODE,ORDER_STATUS,ORDER_DATE,ORDER_PAYMENT,PAYMENT_PRICE)
		VALUES(ORDER_SEQ.nextval, #{id}, #{addressCode},1, sysdate, #{orderPayment}, #{paymentPrice})
		<selectKey keyProperty="orderListCode" resultType="int" order="AFTER">
			SELECT ORDER_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="addOrderDetail">
		INSERT INTO product_order_detail VALUES(PRODUCT_ORDERS_DETAIL_SEQ.nextval, #{orderListCode}, #{productCode}, 1, #{orderPrice}, #{orderInfo}, #{orderAmount})
	</insert>
	
	<update id="setOrderStatus">
		UPDATE ORDER_LIST SET
		ORDER_STATUS = ORDER_STATUS+1
		WHERE ORDER_LIST_CODE = #{code}
		
	</update>
	
	<update id="buyerCount">
		UPDATE PRODUCT SET
		PRODUCT_BUYERS_COUNT = PRODUCT_BUYERS_COUNT+1
		<foreach collection="list" item="list" open="WHERE PRODUCT_CODE IN(" separator="," close=")">
			#{list}
		</foreach>
		
	</update>

</mapper>