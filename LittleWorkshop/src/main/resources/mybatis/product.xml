<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">

	<sql id="search">
		<if test="search != 0">
			<where>
				<!-- 검색 페이지 일때  -->
				<if test="keyword == null">
					p.product_category_code = #{search}
				</if>
				<!-- 네비게이션 페이지 일때  -->
				<if test="keyword != null">
					p.product_category_code = #{search} AND (p.product_name LIKE CONCAT('%',CONCAT(#{keyword},'%')) OR tl.tag_name LIKE CONCAT('%',CONCAT(#{keyword},'%')))
				</if>
			</where>
		</if>
		<if test="sellerId != null">
			<where>
				p.seller_id = #{sellerId}
			</where>
		</if>
		<if test="search == 0">
			<if test="keyword != null">
				<where>
					p.product_name LIKE CONCAT('%',CONCAT(#{keyword},'%')) OR tl.tag_name LIKE CONCAT('%',CONCAT(#{keyword},'%'))
				</where>
			</if>
		</if>
			
	</sql>

	
	<sql id="condition">
		<if test="condition != null">
			<!-- 최신작품 -->
			<if test="condition.equals('lates')">
				order by product_reg_date, product_code desc
			</if>
			<if test="condition.equals('best')">
				<if test="search != 0">
					and product_category_code = #{search}
				</if>
			</if>
			<if test="condition.equals('rcmnd')">
				<if test="id != null">
					 WHERE attention_category.id = #{id}
				</if>
			</if>
		</if>
	</sql>
	
	
	<sql id="conditionCount">
		<if test="condition != null">
			<!-- 인기작품 -->
			<if test="condition.equals('best')">
				<if test="search == 0">
					 where p.product_buyers_count > 5
				</if>
				<if test="search != 0">
					 and p.product_buyers_count > 5
				</if>
			</if>
			<!-- 추천작품 -->
			<if test="condition.equals('rcmnd')">
				<if test="id != null">
					LEFT JOIN attention_category att ON p.product_category_code = att.product_category_code
       			 	where att.id = #{id}
				</if>
			</if>
		</if>
	</sql>
	
	<sql id="likeList">
		<if test="id != null">
			<where>
				product_like_list.id = #{id}
			</where>
		</if>
	</sql>

	<resultMap type="Product" id="ProductMap">
		<id column="product_code" property="productCode"/>
		<result column="seller_id" property="sellerId"/>
		<result column="product_category_code" property="productCategoryCode"/>
		<result column="product_category" property="productCategory"/>
		<result column="product_name" property="productName"/>
		<result column="product_price" property="productPrice"/>
		<result column="product_reg_date" property="productRegDate"/>
		<result column="product_description" property="productDescription"/>
		<result column="PRODUCT_BUYERS_COUNT" property="productBuyersCount"/>
		<result column="PRODUCT_VIEW_COUNT" property="productViewCount"/>
		<result column="like_state" property="likeState"/>
		<result column="sales_rate" property="salesRate"/>
<!-- 		<result column="product_sell_count" property="productSellCount"/> -->
<!-- 		<result column="like_state" property="likeState"/> -->

		<collection property="productOptionList" column="po_product_code" ofType="ProductOption" javaType="ArrayList">
			<id column="product_option_code" property="productOptionCode"/>
			<result column="po_product_code" property="productCode"/>
			<result column="product_option_name" property="productOptionName"/>
			<result column="product_necessary_option" property="productNecessaryOption"/>
			
			<collection property="productOptionDetail" column="pod_product_option_code" ofType="ProductOptionDetail" javaType="ArrayList">
				<id column="product_option_detail_code" property="productOptionDetailCode"/>
				<result column="pod_product_option_code" property="productOptionCode"/>
				<result column="product_option_detail_name" property="productOptionDetailName"/>
				<result column="product_sold_out" property="productSoldOut"/>
			</collection>
		</collection>	
		
		<collection property="productImageList" column="pi_product_code" ofType="ProductImages" javaType="ArrayList">
			<id column="product_image_code" property="productImageCode"/>
			<result column="pi_product_code" property="productCode"/>
			<result column="product_image_uuid" property="productImageUuid"/>
			<result column="product_image_name" property="productImageName"/>
		</collection>
		
		<collection property="tagList" column="ptl_product_code" ofType="Tag" javaType="ArrayList">
			<id column="tag_code" property="tagCode"/>
			<result column="tag_name" property="tagName"/>
			<result column="ptl_product_code" property="targetCode"/>
		</collection>
		
		
	</resultMap>
	
	<select id="list" resultMap="ProductMap">
		SELECT * FROM 
		(SELECT
		p.rnum rnum,
		p.product_code product_code,
		p.seller_id seller_id,
		p.PRODUCT_BUYERS_COUNT,
		p.PRODUCT_VIEW_COUNT,
		c.product_category product_category,
		p.product_name product_name,
		p.product_price product_price,
		p.product_reg_date product_reg_date,
		pi.product_code pi_product_code,
		pi.product_image_code product_image_code,
		pi.product_image_uuid product_image_uuid,
		pi.product_image_name product_image_name,
        tl.tag_code tag_code,
		tl.tag_name tag_name,
		pll.product_like_code like_state
		FROM (SELECT ROWNUM AS RNUM, sub.* FROM
		            (select product.* from product join
		                (SELECT p.product_code FROM product p
						LEFT JOIN product_tag_list ptl ON p.product_code = ptl.product_code
						LEFT JOIN tag_list tl ON ptl.tag_code = tl.tag_code
		                <include refid="search"></include>
		                group by (p.product_code))sub2 on product.product_code = sub2.product_code) sub) p
			JOIN product_category_list c ON p.product_category_code = c.product_category_code
			LEFT JOIN PRODUCT_IMAGES pi ON pi.product_code = p.product_code
			LEFT JOIN product_tag_list ptl ON p.product_code = ptl.product_code
			LEFT JOIN tag_list tl ON ptl.tag_code = tl.tag_code
			LEFT JOIN (SELECT * FROM product_like_list <include refid="likeList"></include>) pll ON pll.product_code = p.product_code)
		<![CDATA[ WHERE RNUM > ((#{page} - 1) * #{perPage}) and RNUM <= ( #{page} * #{perPage})	]]>
		 <include refid="condition"></include>
	</select>
	
	<select id="total" resultType="Integer">
		SELECT count(distinct p.product_code) FROM product p
		LEFT JOIN product_tag_list ptl ON p.product_code = ptl.product_code
		LEFT JOIN tag_list tl ON ptl.tag_code = tl.tag_code
		<include refid="search"></include>
		<include refid="conditionCount"></include>
		
	</select>
	
	<select id="item" resultMap="ProductMap">
		SELECT
		p.product_code product_code,
		p.seller_id seller_id,
		p.product_category_code product_category_code,
		c.product_category product_category,
		p.product_name product_name,
		p.product_price product_price,
		p.product_reg_date product_reg_date,
		p.product_description product_description,
		p.product_view_count product_view_count,
		po.product_code po_product_code,
		po.product_option_name product_option_name,
		po.product_option_code product_option_code,
		po.product_necessary_option product_necessary_option,
		pod.product_option_code pod_product_option_code,
		pod.product_option_detail_name product_option_detail_name,
		pod.product_option_detail_code product_option_detail_code,
		pod.product_sold_out product_sold_out,
		pi.product_code pi_product_code,
		pi.product_image_code product_image_code,
		pi.product_image_uuid product_image_uuid,
		pi.product_image_name product_image_name,
		tl.tag_code tag_code,
		tl.tag_name tag_name,
		ptl.product_code ptl_product_code,
		pll.product_like_code like_state
		FROM product p
		JOIN product_option po ON p.product_code = po.product_code
		JOIN product_option_detail pod ON po.PRODUCT_OPTION_CODE = pod.PRODUCT_OPTION_CODE
		JOIN product_category_list c ON p.product_category_code = c.product_category_code
		LEFT JOIN product_images pi ON pi.product_code = p.product_code
		LEFT JOIN product_tag_list ptl ON p.product_code = ptl.product_code
		LEFT JOIN tag_list tl ON ptl.tag_code = tl.tag_code
		LEFT JOIN (SELECT * FROM product_like_list) pll ON pll.product_code = p.product_code
		WHERE p.product_code = #{productCode}
		ORDER BY pod.product_option_detail_code
	</select>
	
	<select id="categories" resultType="Product">
		SELECT * FROM product_category_list
	</select>
	
	<insert id="productAdd">
		INSERT INTO product
		(product_code, seller_id, product_category_code, product_name, product_price, product_description, product_reg_date)
		VALUES(PRODUCT_SEQ.nextval, #{sellerId}, #{productCategoryCode}, #{productName}, #{productPrice}, #{productDescription}, sysdate)
		<selectKey keyColumn="product_code" resultType="Integer" keyProperty="productCode" order="AFTER">
			SELECT PRODUCT_SEQ.currval product_code FROM dual
		</selectKey>
	</insert>
	
	<insert id="productOptionAdd">
		INSERT INTO product_option
		VALUES(PRODUCT_OPTION_SEQ.nextval, #{productCode}, #{productOptionName}, #{productNecessaryOption})
		
		<selectKey  keyColumn="product_option_code" keyProperty="productOptionCode" resultType="Integer" order="AFTER">
			SELECT PRODUCT_OPTION_SEQ.currval product_option_code FROM dual
		</selectKey>
	</insert>
	
	<insert id="productOptionDetailAdd">
		INSERT INTO product_option_detail
		(product_option_detail_code, product_option_code, product_option_detail_name, product_sold_out)
		VALUES(PRODUCT_OPTION_DETAIL_SEQ.nextval, #{productOptionCode}, #{productOptionDetailName}, #{productSoldOut})
	</insert>
	
	<delete id="productDelete">
		DELETE product
		WHERE product_code = #{productCode}
	</delete>
	
	<update id="productUpdate">
		UPDATE product
		SET product_category_code = #{productCategoryCode}, product_name = #{productName}, product_price = #{productPrice}, product_description = #{productDescription}
		WHERE product_code = #{productCode}
	</update>
	
	<delete id="initProductOptions">
		DELETE product_option
		WHERE product_code = #{productCode}
	</delete>
	
	<insert id="imageUpload">
		INSERT INTO PRODUCT_IMAGES (PRODUCT_IMAGE_CODE,PRODUCT_CODE, PRODUCT_IMAGE_UUID, PRODUCT_IMAGE_NAME)
		VALUES(PRODUCT_IMAGES_SEQ.nextval, #{productCode}, #{productImageUuid}, #{productImageName})
	</insert>
	
	<select id="getSoldOutList" resultType="Integer">
		SELECT pod.product_sold_out FROM product_option_detail pod
		JOIN product_option po ON po.product_option_code = pod.product_option_code
		JOIN product p ON p.product_code = po.product_code
		WHERE p.product_code = #{productCode}
		ORDER BY pod.product_option_detail_code
	</select>
	
	<select id="getProductCategoryCode" resultType="Integer">
		SELECT product_category_code FROM product
		WHERE product_code = #{productCode}
	</select>
	
	<update id="viewCount">
		UPDATE product
		SET product_view_count = product_view_count + 1
		WHERE product_code = #{productCode}
	</update>
	
	<select id="inquery" resultType="Integer">
		SELECT count(*) FROM product_like_list
		WHERE id = #{id} AND product_code = #{productCode}
	</select>
	
	<insert id="addLikeList">
		INSERT INTO product_like_list
		VALUES(PRODUCT_LIKE_LIST_SEQ.nextval, #{id}, #{productCode})
	</insert>
	
	<delete id="deleteLikeList">
		DELETE product_like_list
		WHERE id = #{id} AND product_code = #{productCode}
	</delete>
	
	<select id="bestList" resultMap="ProductMap">
		 select sub.*,
		    pi.product_code pi_product_code,
		    pi.product_image_code product_image_code,
		    pi.product_image_uuid product_image_uuid,
		    pi.product_image_name product_image_name,
		    c.product_category product_category,
		    tl.tag_code tag_code,
		    tl.tag_name tag_name,
		    pll.product_like_code like_state,
		    c.product_category product_category
		    from (SELECT * FROM (SELECT  ROWNUM AS RNUM,
		    p.*,  ROUND((p.PRODUCT_BUYERS_COUNT + (NVL(ll.count,0))) / (PRODUCT_VIEW_COUNT +  p.PRODUCT_BUYERS_COUNT + nvl(cc.count,0)),5) as sales_rate, ll.count as likeCount, cc.count as basketCount
		        FROM (select * from product where PRODUCT_BUYERS_COUNT > 5 and PRODUCT_BUYERS_COUNT IS not NULL <include refid="condition"></include>) p
		            LEFT JOIN (select product_code, count(product_code) as count FROM basket GROUP by product_code) cc ON cc.product_code = p.product_code
		            LEFT JOIN (SELECT product_code, count(product_code) as count FROM product_like_list group by product_code) ll on ll.product_code = p.product_code
		            ORDER BY sales_rate DESC, p.PRODUCT_BUYERS_COUNT)) sub
		            LEFT JOIN product_category_list c ON sub.product_category_code = c.product_category_code
		         LEFT JOIN PRODUCT_IMAGES pi ON pi.product_code = sub.product_code
		         LEFT JOIN product_tag_list ptl ON sub.product_code = ptl.product_code
		         LEFT JOIN tag_list tl ON ptl.tag_code = tl.tag_code
		         LEFT JOIN (SELECT * FROM product_like_list <include refid="likeList"></include>) pll ON pll.product_code = sub.product_code
		         <![CDATA[ WHERE RNUM > ((#{page} - 1) * #{perPage}) and RNUM <= ( #{page} * #{perPage})	]]>
	</select>
	
	<select id="rcmndList" resultMap="ProductMap">
		 select sub.*,
		    pi.product_code pi_product_code,
		    pi.product_image_code product_image_code,
		    pi.product_image_uuid product_image_uuid,
		    pi.product_image_name product_image_name,
		    c.product_category product_category,
		    tl.tag_code tag_code,
		    tl.tag_name tag_name,
		    pll.product_like_code like_state,
		    c.product_category product_category
		    from (SELECT * FROM (SELECT  ROWNUM AS RNUM,
		    p.*  FROM (select product.* from product LEFT JOIN attention_category on product.product_category_code = attention_category.product_category_code <include refid="condition"></include> order by attention_category.attention_count desc) p)) sub
                 LEFT JOIN product_category_list c ON sub.product_category_code = c.product_category_code
		         LEFT JOIN PRODUCT_IMAGES pi ON pi.product_code = sub.product_code
		         LEFT JOIN product_tag_list ptl ON sub.product_code = ptl.product_code
		         LEFT JOIN tag_list tl ON ptl.tag_code = tl.tag_code
		         LEFT JOIN (SELECT * FROM product_like_list <include refid="likeList"></include>) pll ON pll.product_code = sub.product_code
		         <![CDATA[ WHERE RNUM > ((#{page} - 1) * #{perPage}) and RNUM <= ( #{page} * #{perPage})	]]>
	</select>
	
</mapper>